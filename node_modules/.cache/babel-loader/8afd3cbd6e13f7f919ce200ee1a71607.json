{"ast":null,"code":"var _jsxFileName = \"/home/mav/project_youtube_video_player/videoplayer/src/components/VideoDetail.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Typography, Box } from '@mui/material';\nimport { useParams } from 'react-router-dom';\nimport ThumbDownAltOutlinedIcon from '@mui/icons-material/ThumbDownAltOutlined';\nimport ThumbUpAltOutlinedIcon from '@mui/icons-material/ThumbUpAltOutlined';\nimport ReactPlayer from 'react-player';\nimport { useStateContext } from '../contexts/StateContextProvider';\nimport VideoItem from './VideoItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst VideoDetail = () => {\n  _s();\n\n  var _videoDetail$snippet, _videoDetail$snippet3, _videoDetail$statisti, _videoDetail$statisti2, _videoDetail$statisti3;\n\n  const {\n    id\n  } = useParams();\n  const {\n    data,\n    fetchData,\n    fetchOtherData,\n    results\n  } = useStateContext();\n  const [videoDetail, setVideoDetail] = useState();\n  useEffect(() => {\n    fetchData(`search?part=snippet&relatedToVideoId=${id}&type=video`);\n    fetchOtherData(`videos?part=snippet,statistics&id=${id}`);\n  }, [id]);\n  useEffect(() => {\n    setVideoDetail(results[0]);\n  }, [results]);\n\n  if (videoDetail === null || videoDetail === void 0 ? void 0 : (_videoDetail$snippet = videoDetail.snippet) === null || _videoDetail$snippet === void 0 ? void 0 : _videoDetail$snippet.title) {\n    var _videoDetail$snippet2;\n\n    document.title = videoDetail === null || videoDetail === void 0 ? void 0 : (_videoDetail$snippet2 = videoDetail.snippet) === null || _videoDetail$snippet2 === void 0 ? void 0 : _videoDetail$snippet2.title;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: videoDetail && /*#__PURE__*/_jsxDEV(Box, {\n      className: \"video-detail-container\",\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          mt: 1,\n          pb: 1,\n          position: 'relative',\n          width: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: \"video-detail\",\n          sx: {\n            position: 'fixed',\n            top: '100px',\n            left: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(ReactPlayer, {\n            className: \"video-card\",\n            controls: true,\n            url: `https://www.youtube.com/watch?v=${id}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              fontSize: 18,\n              fontWeight: 600,\n              p: 1.5\n            },\n            children: videoDetail === null || videoDetail === void 0 ? void 0 : (_videoDetail$snippet3 = videoDetail.snippet) === null || _videoDetail$snippet3 === void 0 ? void 0 : _videoDetail$snippet3.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'space-between'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                opacity: 0.7\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  marginBottom: '5px'\n                },\n                children: [parseInt(videoDetail === null || videoDetail === void 0 ? void 0 : (_videoDetail$statisti = videoDetail.statistics) === null || _videoDetail$statisti === void 0 ? void 0 : _videoDetail$statisti.viewCount).toLocaleString('en-US'), ' ', \"views\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                opacity: 0.7,\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: 3\n              },\n              className: \"like-dislike\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  marginBottom: '5px',\n                  display: 'flex',\n                  justifyContent: 'flex-start',\n                  alignItems: 'center',\n                  gap: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(ThumbUpAltOutlinedIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  children: parseInt(videoDetail === null || videoDetail === void 0 ? void 0 : (_videoDetail$statisti2 = videoDetail.statistics) === null || _videoDetail$statisti2 === void 0 ? void 0 : _videoDetail$statisti2.likeCount).toLocaleString('en-US')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  marginBottom: '5px',\n                  display: 'flex',\n                  justifyContent: 'flex-start',\n                  alignItems: 'center',\n                  gap: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(ThumbDownAltOutlinedIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  children: parseInt(videoDetail === null || videoDetail === void 0 ? void 0 : (_videoDetail$statisti3 = videoDetail.statistics) === null || _videoDetail$statisti3 === void 0 ? void 0 : _videoDetail$statisti3.dislikeCount).toLocaleString('en-US')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 10\n        },\n        className: \"related-videos\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            fontSize: 25,\n            fontWeight: 800,\n            m: 2,\n            textAlign: 'center'\n          },\n          children: \"Similar Videos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: \"related-videos-container\",\n          children: data === null || data === void 0 ? void 0 : data.map(video => /*#__PURE__*/_jsxDEV(VideoItem, {\n            video: video,\n            id: video.id.videoId && video.id.videoId || video.id\n          }, video.id.videoId && video.id.videoId || video.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(VideoDetail, \"23gS5iuA68och5dRVZVwLPbkuFY=\", false, function () {\n  return [useParams, useStateContext];\n});\n\n_c = VideoDetail;\nexport default VideoDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoDetail\");","map":{"version":3,"sources":["/home/mav/project_youtube_video_player/videoplayer/src/components/VideoDetail.jsx"],"names":["React","useEffect","useState","Typography","Box","useParams","ThumbDownAltOutlinedIcon","ThumbUpAltOutlinedIcon","ReactPlayer","useStateContext","VideoItem","VideoDetail","id","data","fetchData","fetchOtherData","results","videoDetail","setVideoDetail","snippet","title","document","display","justifyContent","flexDirection","alignItems","mt","pb","position","width","top","left","fontSize","fontWeight","p","opacity","marginBottom","parseInt","statistics","viewCount","toLocaleString","flexWrap","gap","likeCount","dislikeCount","m","textAlign","map","video","videoId"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Typography, Box } from '@mui/material';\nimport { useParams } from 'react-router-dom';\nimport ThumbDownAltOutlinedIcon from '@mui/icons-material/ThumbDownAltOutlined';\nimport ThumbUpAltOutlinedIcon from '@mui/icons-material/ThumbUpAltOutlined';\nimport ReactPlayer from 'react-player';\nimport { useStateContext } from '../contexts/StateContextProvider';\nimport VideoItem from './VideoItem';\n\nconst VideoDetail = () => {\n  const { id } = useParams();\n  const { data, fetchData, fetchOtherData, results } = useStateContext();\n  const [videoDetail, setVideoDetail] = useState();\n\n  useEffect(() => {\n    fetchData(`search?part=snippet&relatedToVideoId=${id}&type=video`);\n    fetchOtherData(`videos?part=snippet,statistics&id=${id}`);\n  }, [id]);\n\n  useEffect(() => {\n    setVideoDetail(results[0]);\n  }, [results]);\n\n  if (videoDetail?.snippet?.title) {\n    document.title = videoDetail?.snippet?.title;\n  }\n  return (\n    <>\n      {videoDetail && (\n        <Box\n          className='video-detail-container'\n          sx={{\n            display: 'flex',\n            justifyContent: 'space-between',\n          }}\n        >\n          <Box\n            sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              mt: 1,\n              pb: 1,\n              position: 'relative',\n              width: '100%',\n            }}\n          >\n            <Box\n              className='video-detail'\n              sx={{ position: 'fixed', top: '100px', left: '10px' }}\n            >\n              <ReactPlayer\n                className='video-card'\n                controls\n                url={`https://www.youtube.com/watch?v=${id}`}\n              />\n              <Typography sx={{ fontSize: 18, fontWeight: 600, p: 1.5 }}>\n                {videoDetail?.snippet?.title}\n              </Typography>\n              <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                <Box sx={{ opacity: 0.7 }}>\n                  <Typography sx={{ marginBottom: '5px' }}>\n                    {parseInt(\n                      videoDetail?.statistics?.viewCount\n                    ).toLocaleString('en-US')}{' '}\n                    views\n                  </Typography>\n                  {/* <Typography>{videoDetail?.snippet?.publishedAt}</Typography> */}\n                </Box>\n\n                <Box\n                  sx={{\n                    opacity: 0.7,\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    gap: 3,\n                  }}\n                  className='like-dislike'\n                >\n                  <Typography\n                    sx={{\n                      marginBottom: '5px',\n                      display: 'flex',\n                      justifyContent: 'flex-start',\n                      alignItems: 'center',\n                      gap: 1,\n                    }}\n                  >\n                    <ThumbUpAltOutlinedIcon />\n                    <Typography>\n                      {parseInt(\n                        videoDetail?.statistics?.likeCount\n                      ).toLocaleString('en-US')}\n                    </Typography>\n                  </Typography>\n                  <Typography\n                    sx={{\n                      marginBottom: '5px',\n                      display: 'flex',\n                      justifyContent: 'flex-start',\n                      alignItems: 'center',\n                      gap: 1,\n                    }}\n                  >\n                    <ThumbDownAltOutlinedIcon />\n                    <Typography>\n                      {parseInt(\n                        videoDetail?.statistics?.dislikeCount\n                      ).toLocaleString('en-US')}\n                    </Typography>\n                  </Typography>\n                </Box>\n              </Box>\n            </Box>\n          </Box>\n          <Box\n            sx={{\n              mt: 10,\n            }}\n            className='related-videos'\n          >\n            <Typography\n              sx={{ fontSize: 25, fontWeight: 800, m: 2, textAlign: 'center' }}\n            >\n              Similar Videos\n            </Typography>\n            <Box className='related-videos-container'>\n              {data?.map((video) => (\n                <VideoItem\n                  video={video}\n                  id={(video.id.videoId && video.id.videoId) || video.id}\n                  key={(video.id.videoId && video.id.videoId) || video.id}\n                />\n              ))}\n            </Box>\n          </Box>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default VideoDetail;\n"]},"metadata":{},"sourceType":"module"}