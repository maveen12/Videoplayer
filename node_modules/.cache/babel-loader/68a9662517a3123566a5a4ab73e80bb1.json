{"ast":null,"code":"var _jsxFileName = \"/home/mav/project_youtube_video_player/videoplayer/src/components/Feed.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Box, Typography, Button } from '@mui/material';\nimport HorizontalScroll from 'react-scroll-horizontal';\nimport { useStateContext } from '../contexts/StateContextProvider';\nimport VideoItem from './VideoItem';\nimport Loader from './Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Feed = () => {\n  _s();\n\n  const {\n    fetchData,\n    data,\n    loading,\n    results,\n    fetchOtherData\n  } = useStateContext();\n  const [keyword, setKeyword] = useState();\n  useEffect(() => {\n    if (keyword) {\n      fetchData(`search?part=snippet&q=${keyword}`);\n    } else {\n      fetchData(`videos?part=snippet&chart=mostPopular`);\n    }\n\n    fetchOtherData('videoCategories?part=snippet');\n    document.title = 'UðŸ“ºtube';\n  }, [keyword]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"categories\",\n      sx: {\n        display: 'flex',\n        gap: 5,\n        overflow: 'auto',\n        width: '100%',\n        height: '100px',\n        mt: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(HorizontalScroll, {\n        reverseScroll: true,\n        children: results === null || results === void 0 ? void 0 : results.map(category => {\n          var _category$snippet;\n\n          return /*#__PURE__*/_jsxDEV(Button, {\n            className: \"category-button\",\n            onClick: () => setKeyword(category.snippet.title),\n            sx: {\n              width: '170px',\n              height: '50px',\n              background: '#F9F9F9',\n              borderRadius: 20,\n              color: 'black',\n              cursor: 'pointer',\n              fontWeight: 600,\n              mt: 1,\n              ml: 1\n            },\n            children: category === null || category === void 0 ? void 0 : (_category$snippet = category.snippet) === null || _category$snippet === void 0 ? void 0 : _category$snippet.title\n          }, category === null || category === void 0 ? void 0 : category.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        alignItems: 'center',\n        gap: 2,\n        p: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          fontSize: 25,\n          fontWeight: 900,\n          p: 3,\n          pb: 1,\n          pt: 0\n        },\n        children: [keyword || 'Recommended', \" Videos\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        alignItems: 'center',\n        gap: 2,\n        p: 1\n      },\n      children: data === null || data === void 0 ? void 0 : data.map(video => /*#__PURE__*/_jsxDEV(VideoItem, {\n        video: video,\n        id: video.id.videoId && video.id.videoId || video.id\n      }, video.id.videoId && video.id.videoId || video.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Feed, \"HhM0H1FScXucwLZ2AXGfhssEv7c=\", false, function () {\n  return [useStateContext];\n});\n\n_c = Feed;\nexport default Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["/home/mav/project_youtube_video_player/videoplayer/src/components/Feed.jsx"],"names":["React","useEffect","useState","Box","Typography","Button","HorizontalScroll","useStateContext","VideoItem","Loader","Feed","fetchData","data","loading","results","fetchOtherData","keyword","setKeyword","document","title","display","gap","overflow","width","height","mt","map","category","snippet","background","borderRadius","color","cursor","fontWeight","ml","id","flexWrap","justifyContent","alignItems","p","fontSize","pb","pt","video","videoId"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Box, Typography, Button } from '@mui/material';\nimport HorizontalScroll from 'react-scroll-horizontal';\nimport { useStateContext } from '../contexts/StateContextProvider';\nimport VideoItem from './VideoItem';\nimport Loader from './Loader';\n\nconst Feed = () => {\n  const { fetchData, data, loading, results, fetchOtherData } =\n    useStateContext();\n  const [keyword, setKeyword] = useState();\n\n  useEffect(() => {\n    if (keyword) {\n      fetchData(`search?part=snippet&q=${keyword}`);\n    } else {\n      fetchData(`videos?part=snippet&chart=mostPopular`);\n    }\n\n    fetchOtherData('videoCategories?part=snippet');\n    document.title = 'UðŸ“ºtube';\n  }, [keyword]);\n\n  if (loading) {\n    return <Loader />;\n  }\n  return (\n    <Box>\n      <Box\n        className='categories'\n        sx={{\n          display: 'flex',\n          gap: 5,\n          overflow: 'auto',\n          width: '100%',\n          height: '100px',\n          mt: 10,\n        }}\n      >\n        <HorizontalScroll reverseScroll={true}>\n          {results?.map((category) => (\n            <Button\n              className='category-button'\n              onClick={() => setKeyword(category.snippet.title)}\n              sx={{\n                width: '170px',\n                height: '50px',\n                background: '#F9F9F9',\n                borderRadius: 20,\n                color: 'black',\n                cursor: 'pointer',\n                fontWeight: 600,\n                mt: 1,\n                ml: 1,\n              }}\n              key={category?.id}\n            >\n              {category?.snippet?.title}\n            </Button>\n          ))}\n        </HorizontalScroll>\n      </Box>\n      <Box\n        sx={{\n          display: 'flex',\n          flexWrap: 'wrap',\n          justifyContent: 'center',\n          alignItems: 'center',\n          gap: 2,\n          p: 1,\n        }}\n      >\n        <Typography sx={{ fontSize: 25, fontWeight: 900, p: 3, pb: 1, pt: 0 }}>\n          {keyword || 'Recommended'} Videos\n        </Typography>\n      </Box>\n      <Box\n        sx={{\n          display: 'flex',\n          flexWrap: 'wrap',\n          justifyContent: 'center',\n          alignItems: 'center',\n          gap: 2,\n          p: 1,\n        }}\n      >\n        {data?.map((video) => (\n          <VideoItem\n            video={video}\n            id={(video.id.videoId && video.id.videoId) || video.id}\n            key={(video.id.videoId && video.id.videoId) || video.id}\n          />\n        ))}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Feed;\n"]},"metadata":{},"sourceType":"module"}