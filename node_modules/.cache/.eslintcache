[{"/home/mav/project_youtube_video_player/videoplayer/src/index.js":"1","/home/mav/project_youtube_video_player/videoplayer/src/App.js":"2","/home/mav/project_youtube_video_player/videoplayer/src/contexts/StateContextProvider.js":"3","/home/mav/project_youtube_video_player/videoplayer/src/components/Feed.jsx":"4","/home/mav/project_youtube_video_player/videoplayer/src/components/Navbar.jsx":"5","/home/mav/project_youtube_video_player/videoplayer/src/components/SearchFeed.jsx":"6","/home/mav/project_youtube_video_player/videoplayer/src/components/VideoDetail.jsx":"7","/home/mav/project_youtube_video_player/videoplayer/src/components/Loader.js":"8","/home/mav/project_youtube_video_player/videoplayer/src/components/VideoItem.jsx":"9","/home/mav/project_youtube_video_player/videoplayer/src/components/SearchBar.jsx":"10"},{"size":348,"mtime":1650713265151,"results":"11","hashOfConfig":"12"},{"size":675,"mtime":1650713265150,"results":"13","hashOfConfig":"12"},{"size":1231,"mtime":1650727939310,"results":"14","hashOfConfig":"12"},{"size":2568,"mtime":1650713265150,"results":"15","hashOfConfig":"12"},{"size":764,"mtime":1650713265150,"results":"16","hashOfConfig":"12"},{"size":805,"mtime":1650713265150,"results":"17","hashOfConfig":"12"},{"size":4673,"mtime":1650713265151,"results":"18","hashOfConfig":"12"},{"size":336,"mtime":1650713265150,"results":"19","hashOfConfig":"12"},{"size":1151,"mtime":1650713265151,"results":"20","hashOfConfig":"12"},{"size":1189,"mtime":1650713265150,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"343c1x",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/home/mav/project_youtube_video_player/videoplayer/src/index.js",[],["45","46"],"/home/mav/project_youtube_video_player/videoplayer/src/App.js",[],"/home/mav/project_youtube_video_player/videoplayer/src/contexts/StateContextProvider.js",[],"/home/mav/project_youtube_video_player/videoplayer/src/components/Feed.jsx",["47"],"import React, { useEffect, useState } from 'react';\nimport { Box, Typography, Button } from '@mui/material';\nimport HorizontalScroll from 'react-scroll-horizontal';\nimport { useStateContext } from '../contexts/StateContextProvider';\nimport VideoItem from './VideoItem';\nimport Loader from './Loader';\n\nconst Feed = () => {\n  const { fetchData, data, loading, results, fetchOtherData } =\n    useStateContext();\n  const [keyword, setKeyword] = useState();\n\n  useEffect(() => {\n    if (keyword) {\n      fetchData(`search?part=snippet&q=${keyword}`);\n    } else {\n      fetchData(`videos?part=snippet&chart=mostPopular`);\n    }\n\n    fetchOtherData('videoCategories?part=snippet');\n    document.title = 'UðŸ“ºtube';\n  }, [keyword]);\n\n  if (loading) {\n    return <Loader />;\n  }\n  return (\n    <Box>\n      <Box\n        className='categories'\n        sx={{\n          display: 'flex',\n          gap: 5,\n          overflow: 'auto',\n          width: '100%',\n          height: '100px',\n          mt: 10,\n        }}\n      >\n        <HorizontalScroll reverseScroll={true}>\n          {results?.map((category) => (\n            <Button\n              className='category-button'\n              onClick={() => setKeyword(category.snippet.title)}\n              sx={{\n                width: '170px',\n                height: '50px',\n                background: '#F9F9F9',\n                borderRadius: 20,\n                color: 'black',\n                cursor: 'pointer',\n                fontWeight: 600,\n                mt: 1,\n                ml: 1,\n              }}\n              key={category?.id}\n            >\n              {category?.snippet?.title}\n            </Button>\n          ))}\n        </HorizontalScroll>\n      </Box>\n      <Box\n        sx={{\n          display: 'flex',\n          flexWrap: 'wrap',\n          justifyContent: 'center',\n          alignItems: 'center',\n          gap: 2,\n          p: 1,\n        }}\n      >\n        <Typography sx={{ fontSize: 25, fontWeight: 900, p: 3, pb: 1, pt: 0 }}>\n          {keyword || 'Recommended'} Videos\n        </Typography>\n      </Box>\n      <Box\n        sx={{\n          display: 'flex',\n          flexWrap: 'wrap',\n          justifyContent: 'center',\n          alignItems: 'center',\n          gap: 2,\n          p: 1,\n        }}\n      >\n        {data?.map((video) => (\n          <VideoItem\n            video={video}\n            id={(video.id.videoId && video.id.videoId) || video.id}\n            key={(video.id.videoId && video.id.videoId) || video.id}\n          />\n        ))}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Feed;\n","/home/mav/project_youtube_video_player/videoplayer/src/components/Navbar.jsx",[],"/home/mav/project_youtube_video_player/videoplayer/src/components/SearchFeed.jsx",[],"/home/mav/project_youtube_video_player/videoplayer/src/components/VideoDetail.jsx",["48"],"import React, { useEffect, useState } from 'react';\nimport { Typography, Box } from '@mui/material';\nimport { useParams } from 'react-router-dom';\nimport ThumbDownAltOutlinedIcon from '@mui/icons-material/ThumbDownAltOutlined';\nimport ThumbUpAltOutlinedIcon from '@mui/icons-material/ThumbUpAltOutlined';\nimport ReactPlayer from 'react-player';\nimport { useStateContext } from '../contexts/StateContextProvider';\nimport VideoItem from './VideoItem';\n\nconst VideoDetail = () => {\n  const { id } = useParams();\n  const { data, fetchData, fetchOtherData, results } = useStateContext();\n  const [videoDetail, setVideoDetail] = useState();\n\n  useEffect(() => {\n    fetchData(`search?part=snippet&relatedToVideoId=${id}&type=video`);\n    fetchOtherData(`videos?part=snippet,statistics&id=${id}`);\n  }, [id]);\n\n  useEffect(() => {\n    setVideoDetail(results[0]);\n  }, [results]);\n\n  if (videoDetail?.snippet?.title) {\n    document.title = videoDetail?.snippet?.title;\n  }\n  return (\n    <>\n      {videoDetail && (\n        <Box\n          className='video-detail-container'\n          sx={{\n            display: 'flex',\n            justifyContent: 'space-between',\n          }}\n        >\n          <Box\n            sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              mt: 1,\n              pb: 1,\n              position: 'relative',\n              width: '100%',\n            }}\n          >\n            <Box\n              className='video-detail'\n              sx={{ position: 'fixed', top: '100px', left: '10px' }}\n            >\n              <ReactPlayer\n                className='video-card'\n                controls\n                url={`https://www.youtube.com/watch?v=${id}`}\n              />\n              <Typography sx={{ fontSize: 18, fontWeight: 600, p: 1.5 }}>\n                {videoDetail?.snippet?.title}\n              </Typography>\n              <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                <Box sx={{ opacity: 0.7 }}>\n                  <Typography sx={{ marginBottom: '5px' }}>\n                    {parseInt(\n                      videoDetail?.statistics?.viewCount\n                    ).toLocaleString('en-US')}{' '}\n                    views\n                  </Typography>\n                  {/* <Typography>{videoDetail?.snippet?.publishedAt}</Typography> */}\n                </Box>\n\n                <Box\n                  sx={{\n                    opacity: 0.7,\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    gap: 3,\n                  }}\n                  className='like-dislike'\n                >\n                  <Typography\n                    sx={{\n                      marginBottom: '5px',\n                      display: 'flex',\n                      justifyContent: 'flex-start',\n                      alignItems: 'center',\n                      gap: 1,\n                    }}\n                  >\n                    <ThumbUpAltOutlinedIcon />\n                    <Typography>\n                      {parseInt(\n                        videoDetail?.statistics?.likeCount\n                      ).toLocaleString('en-US')}\n                    </Typography>\n                  </Typography>\n                  <Typography\n                    sx={{\n                      marginBottom: '5px',\n                      display: 'flex',\n                      justifyContent: 'flex-start',\n                      alignItems: 'center',\n                      gap: 1,\n                    }}\n                  >\n                    <ThumbDownAltOutlinedIcon />\n                    <Typography>\n                      {parseInt(\n                        videoDetail?.statistics?.dislikeCount\n                      ).toLocaleString('en-US')}\n                    </Typography>\n                  </Typography>\n                </Box>\n              </Box>\n            </Box>\n          </Box>\n          <Box\n            sx={{\n              mt: 10,\n            }}\n            className='related-videos'\n          >\n            <Typography\n              sx={{ fontSize: 25, fontWeight: 800, m: 2, textAlign: 'center' }}\n            >\n              Similar Videos\n            </Typography>\n            <Box className='related-videos-container'>\n              {data?.map((video) => (\n                <VideoItem\n                  video={video}\n                  id={(video.id.videoId && video.id.videoId) || video.id}\n                  key={(video.id.videoId && video.id.videoId) || video.id}\n                />\n              ))}\n            </Box>\n          </Box>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default VideoDetail;\n","/home/mav/project_youtube_video_player/videoplayer/src/components/Loader.js",[],"/home/mav/project_youtube_video_player/videoplayer/src/components/VideoItem.jsx",[],"/home/mav/project_youtube_video_player/videoplayer/src/components/SearchBar.jsx",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":22,"column":6,"nodeType":"55","endLine":22,"endColumn":15,"suggestions":"56"},{"ruleId":"53","severity":1,"message":"54","line":18,"column":6,"nodeType":"55","endLine":18,"endColumn":10,"suggestions":"57"},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchData' and 'fetchOtherData'. Either include them or remove the dependency array.","ArrayExpression",["60"],["61"],"no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},{"desc":"64","fix":"65"},"Update the dependencies array to be: [fetchData, fetchOtherData, keyword]",{"range":"66","text":"67"},"Update the dependencies array to be: [fetchData, fetchOtherData, id]",{"range":"68","text":"69"},[714,723],"[fetchData, fetchOtherData, keyword]",[796,800],"[fetchData, fetchOtherData, id]"]